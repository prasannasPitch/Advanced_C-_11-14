
#include <iostream>
#include <typeinfo>

template <typename T1, typename T2>
auto add(T1 fir, T2 sec) -> decltype(fir + sec){
  return fir + sec;
}

template <typename T1, typename T2>
auto add14(T1 fir, T2 sec){
  return fir + sec;
}

int main(){

  std::cout << std::endl;

  auto a = add(2000, 11);
  auto b = add(2000L, 11);
  auto c = add(3, 0.1415);

  std::cout << "a: " << a <<  " of type " << typeid(a).name() << std::endl;
  std::cout << "b: " << b <<  " of type " << typeid(b).name() << std::endl;
  std::cout << "c: " << c <<  " of type " << typeid(c).name() << std::endl;

  std::cout << std::endl;

  auto a1 = add14(2000, 14);
  auto b1 = add14(2000L, 14);
  auto c1 = add14(3, 0.1415);

  std::cout << "a1: " << a1 <<  " of type " << typeid(a1).name() << std::endl;
  std::cout << "b1: " << b1 <<  " of type " << typeid(b1).name() << std::endl;
  std::cout << "c1: " << c1 <<  " of type " << typeid(c1).name() << std::endl;

  std::cout << std::endl;

}
